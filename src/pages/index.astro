---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Astro Cardano OrbitDB">
  <main>
    <h1>Welcome to Astro Cardano OrbitDB</h1>
    <div id="wallet-info">
      <button id="connect-wallet">Connect Cardano Wallet</button>
      <p id="wallet-address"></p>
      <p id="wallet-balance"></p>
    </div>
    <div id="orbitdb-demo">
      <h2>OrbitDB Demo</h2>
      <input type="text" id="db-key" placeholder="Enter key">
      <input type="text" id="db-value" placeholder="Enter value">
      <button id="add-item">Add Item</button>
      <button id="get-all-items">Get All Items</button>
      <div id="db-items"></div>
    </div>
  </main>
</Layout>

<script>
  import CardanoWallet from '../components/CardanoWallet.js';
  import OrbitDBManager from '../components/OrbitDB.js';

  const connectWalletBtn = document.getElementById('connect-wallet');
  const walletAddressEl = document.getElementById('wallet-address');
  const walletBalanceEl = document.getElementById('wallet-balance');
  const dbKeyInput = document.getElementById('db-key') as HTMLInputElement;
  const dbValueInput = document.getElementById('db-value') as HTMLInputElement;
  const addItemBtn = document.getElementById('add-item');
  const getAllItemsBtn = document.getElementById('get-all-items');
  const dbItemsEl = document.getElementById('db-items');

  if (connectWalletBtn) {
    connectWalletBtn.addEventListener('click', async () => {
      try {
        const address = await CardanoWallet.connect();
        if (walletAddressEl) walletAddressEl.textContent = `Address: ${address}`;
        const balance = await CardanoWallet.getBalance();
        if (walletBalanceEl) walletBalanceEl.textContent = `Balance: ${balance} ADA`;
      } catch (error) {
        console.error('Error connecting wallet:', error);
        alert(error instanceof Error ? error.message : 'An unknown error occurred');
      }
    });
  }

  if (addItemBtn) {
    addItemBtn.addEventListener('click', async () => {
      const key = dbKeyInput?.value;
      const value = dbValueInput?.value;
      if (key && value) {
        try {
          await OrbitDBManager.addItem(key, value);
          if (dbKeyInput) dbKeyInput.value = '';
          if (dbValueInput) dbValueInput.value = '';
          alert('Item added successfully');
        } catch (error) {
          console.error('Error adding item:', error);
          alert(error instanceof Error ? error.message : 'An unknown error occurred');
        }
      } else {
        alert('Please enter both key and value');
      }
    });
  }

  if (getAllItemsBtn) {
    getAllItemsBtn.addEventListener('click', async () => {
      try {
        const items = await OrbitDBManager.getAllItems();
        if (dbItemsEl) {
          dbItemsEl.innerHTML = '';
          for (const [key, value] of Object.entries(items)) {
            const itemEl = document.createElement('p');
            itemEl.textContent = `${key}: ${value}`;
            dbItemsEl.appendChild(itemEl);
          }
        }
      } catch (error) {
        console.error('Error getting items:', error);
        alert(error instanceof Error ? error.message : 'An unknown error occurred');
      }
    });
  }

  // Initialize OrbitDB
  window.addEventListener('load', () => {
    OrbitDBManager.init().catch((error) => {
      console.error('Error initializing OrbitDB:', error);
      alert('Failed to initialize OrbitDB');
    });
  });
</script>

<style>
  main {
    margin: auto;
    padding: 1rem;
    max-width: 800px;
    font-family: system-ui, sans-serif;
  }
  h1 {
    font-size: 3rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  #wallet-info, #orbitdb-demo {
    margin-bottom: 2rem;
  }
  input, button {
    margin: 0.5rem 0;
  }
</style>
